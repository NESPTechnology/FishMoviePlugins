{
  "hostUrl": "https://m.kankanwu.com/",
  "intro": "",
  "mainPageUrl": "https://m.kankanwu.com/",
  "mainPageScript": "function loadMainVideoPage() {\n    try {\n        let mMainVideoPage = {\n            \"slideVideos\": [],\n            \"newPlay\": [],\n            \"newMovie\": [],\n            \"newSoap\": [],\n            \"newVariety\": [],\n            \"newAnim\": []\n        };\n\n        function getVideos(ele) {\n            let videoLis = ele.getElementsByTagName(\"li\");\n            let videos = [];\n            for (let i = 0; i < videoLis.length; i++) {\n                let videoItemContentEle = videoLis[i].getElementsByTagName(\"a\")[0];\n                let video = {};\n                video.infoUrl = window.location.protocol + \"//\" + window.location.host + videoItemContentEle.attributes[\"href\"].value;\n                video.name = videoItemContentEle.attributes[\"title\"].value;\n                try {\n                    video.score = videoItemContentEle.getElementsByClassName(\"score\")[0].textContent;\n                } catch (e) {\n                }\n                try {\n                    video.title = videoItemContentEle.getElementsByClassName(\"title\")[0].textContent;\n                } catch (e) {\n                }\n                try {\n                    video.coverImageUrl = videoItemContentEle.getElementsByTagName(\"img\")[0].attributes[\"src\"].value;\n                } catch (e) {\n                }\n                videos.push(video);\n            }\n            return videos;\n        }\n\n        let swiperItems = document.querySelector(\"#focus > ul\").getElementsByTagName(\"a\");\n        for (let i = 0; i < swiperItems.length; i++) {\n            let swiperItem = swiperItems[i];\n            let img = swiperItem.getElementsByTagName(\"img\")[0];\n            let video = {\"videoSourceName\": \"看看屋\"};\n            video.infoUrl = window.location.protocol + \"//\" + window.location.host + swiperItem.attributes[\"href\"].value;\n            video.coverImageUrl = img.attributes[\"src\"].value;\n            video.title = swiperItem.textContent.replace(\"[\", \"\").replace(\"]\",\"\").trimStart().trimEnd();\n            mMainVideoPage.slideVideos.push(video);\n        }\n\n        mMainVideoPage.newMovie = getVideos(document.getElementsByClassName(\"all_tab\")[0].getElementsByTagName(\"ul\")[0]);\n        mMainVideoPage.newSoap = getVideos(document.getElementsByClassName(\"all_tab\")[1].getElementsByTagName(\"ul\")[0]);\n        mMainVideoPage.newVariety = getVideos(document.getElementsByClassName(\"all_tab\")[4].getElementsByTagName(\"ul\")[0]);\n        mMainVideoPage.newAnim = getVideos(document.getElementsByClassName(\"all_tab\")[2].getElementsByTagName(\"ul\")[0]);\n        console.log(JSON.stringify(mMainVideoPage));\n        window.videoPluginEngine.sendMainVideoPage(JSON.stringify(mMainVideoPage));\n    } catch (e) {\n        window.videoPluginEngine.sendError(e.toString());\n    }\n}\n\nloadMainVideoPage();",
  "moviePageUrl": "https://m.kankanwu.com/dy/index_1_______1.html",
  "soapPageUrl": "https://m.kankanwu.com/dsj/index_1_______1.html",
  "varietyPageUrl": "https://m.kankanwu.com/Arts/index.html",
  "animPageUrl": "https://m.kankanwu.com/Animation/index.html",
  "videosPageScript": "function loadVideoListPage() {\n    try {\n        let mVideoPage = {\"videoClassGroups\": [], \"videoList\": [], \"haveNextPage\": false, \"nextPageUrl\": \"\"};\n\n        let selectList = document.getElementsByClassName(\"selectList\")[0];\n        let selectGroupsLi = selectList.getElementsByTagName(\"li\");\n        for (let i = 0; selectGroupsLi.length > i; i++) {\n            let mVideoClassGroup = {\"videoClasses\": []};\n            let selects = selectGroupsLi[i].getElementsByTagName(\"a\");\n            for (let j = 0; j < selects.length; j++) {\n                let mVideoClass = {\n                    \"pageUrl\": document.location.protocol + \"//\" + window.location.host + selects[j].attributes[\"href\"].value,\n                    \"name\": selects[j].text\n                };\n                mVideoClassGroup.videoClasses.push(mVideoClass);\n            }\n            mVideoPage.videoClassGroups.push(mVideoClassGroup);\n        }\n\n        let videoItemEles = document.getElementById(\"vod_list\").getElementsByTagName(\"li\");\n\n        for (let i = 0; i < videoItemEles.length; i++) {\n\n            let videoItemContentEle = videoItemEles[i].getElementsByTagName(\"a\")[0];\n\n            let video = {};\n            video.infoUrl = document.location.protocol + \"//\" + window.location.host + videoItemContentEle.attributes[\"href\"].value;\n            video.name = videoItemContentEle.attributes[\"title\"].value;\n            try {\n                video.score = videoItemContentEle.getElementsByClassName(\"score\")[0].textContent;\n            } catch (e) {\n            }\n            try {\n                video.title = videoItemContentEle.getElementsByClassName(\"title\")[0].textContent;\n            } catch (e) {\n            }\n            video.coverImageUrl = videoItemContentEle.getElementsByTagName(\"img\")[0].attributes[\"src\"].value;\n            mVideoPage.videoList.push(video);\n        }\n        let pagesEle = document.getElementsByClassName(\"ui-vpages\")[0];\n        if (pagesEle.getElementsByTagName(\"strong\")[0] != null) {\n            let pages = pagesEle.getElementsByTagName(\"strong\")[0].innerText.trim().split(/\\s+/)[1];\n            let fullPage = pages.trim().split(\"/\")[1];\n            let currentPage = pages.trim().split(\"/\")[0];\n            mVideoPage.haveNextPage = currentPage / fullPage < 1;\n            if (mVideoPage.haveNextPage) {\n                mVideoPage.nextPageUrl = document.location.protocol + \"//\" + window.location.host + pagesEle.getElementsByClassName(\"pagegbk\")[0].attributes[\"href\"].value;\n            }\n        } else {\n            mVideoPage.haveNextPage = false\n        }\n\n        console.log(JSON.stringify(mVideoPage));\n        window.videoPluginEngine.sendVideoPage(JSON.stringify(mVideoPage));\n    } catch (e) {\n        window.videoPluginEngine.sendError(e.toString());\n    }\n}\nloadVideoListPage();",
  "searchPageUrl": "https://m.kankanwu.com/vod-search-wd-@st-p-1.html",
  "searchPageScript": "function loadSearchPage() {\n    try {\n        let mSearchPage = {\"videoList\": [], \"haveNextPage\": false, \"nextPageUrl\": \"\"};\n        let videosItemElems = document.getElementsByClassName(\"new_tab_img\")[0].getElementsByTagName(\"li\");\n        for (let i = 0; i < videosItemElems.length; i++) {\n            let videoItemContentEle = videosItemElems[i].getElementsByTagName(\"a\")[0];\n            let video = {\"videoSourceName\": \"看看屋\"};\n            let videoInfo = videosItemElems[i].getElementsByClassName(\"list_info\")[0].textContent;\n            video.infoUrl = document.location.protocol + \"//\" + window.location.host + videoItemContentEle.attributes[\"href\"].value;\n            video.name = videoItemContentEle.attributes[\"title\"].value.trimEnd().trimStart();\n            video.coverImageUrl = videoItemContentEle.getElementsByTagName(\"img\")[0].attributes[\"src\"].value;\n            video.videoClass = videoInfo.split(\"分类：\")[1].split(\"类型：\")[0].trimEnd().trimStart();\n            video.types = videoInfo.split(\"类型：\")[1].split(\"演员：\")[0].trimEnd().trimStart();\n            video.stars = videoInfo.split(\"演员：\")[1].split(\"状态：\")[0].trimEnd().trimStart();\n            video.status = videoInfo.split(\"状态：\")[1].split(\"时间：\")[0].trimEnd().trimStart();\n            video.updateTime = videoInfo.split(\"时间：\")[1].trimEnd().trimStart();\n            mSearchPage.videoList.push(video)\n        }\n        let searchPagesEle = document.getElementsByClassName(\"ui-vpages\")[0];\n\n        let pages = null;\n\n        try {\n            pages = searchPagesEle.getElementsByTagName(\"strong\")[0].innerText.trim().split(/\\s+/)[1];\n        } catch (e) {\n        }\n\n        mSearchPage.haveNextPage = false;\n        mSearchPage.nextPageUrl = \"\";\n        if (pages != null) {\n            let fullPage = pages.trim().split(\"/\")[1];\n            let currentPage = pages.trim().split(\"/\")[0];\n            mSearchPage.haveNextPage = currentPage / fullPage < 1;\n            if (mSearchPage.haveNextPage) {\n                mSearchPage.nextPageUrl = document.location.protocol + \"//\" + window.location.host + searchPagesEle.getElementsByClassName(\"pagegbk\")[0].attributes[\"href\"].value;\n            }\n        }\n        console.log(JSON.stringify(mSearchPage));\n        window.videoPluginEngine.sendSearchVideoPage(JSON.stringify(mSearchPage));\n    } catch (e) {\n        window.videoPluginEngine.sendError(e.toString());\n    }\n}\nloadSearchPage();",
  "playPageScript": "function loadInfoPage() {\n    try {\n        const mVideoInfo = {\n            \"name\": \"\",\n            \"title\": \"\",\n            \"status\": \"\",\n            \"coverImageUrl\": \"\",\n            \"playLineList\": [],\n            \"videoClass\": \"\",\n            \"types\": \"\",\n            \"score\": \"\",\n            \"infoUrl\": \"\",\n            \"stars\": \"\",\n            \"director\": \"\",\n            \"updateTime\": \"\",\n            \"showTime\": \"\",\n            \"introduction\": \"\",\n            \"area\": \"\",\n            \"language\": \"\",\n            \"headerTime\": 0,\n            \"tailTime\": 0,\n            \"videoType\": -1,\n        };\n        mVideoInfo.coverImageUrl = document.location.protocol + \"//\" + window.location.host + document.getElementsByClassName(\"vod-n-img\")[0].getElementsByTagName(\"img\")[0].attributes[\"data-original\"].value;\n        const videoInfoText = document.getElementsByClassName(\"vod-n-l\")[0].textContent;\n        mVideoInfo.name = videoInfoText.split(\"状态：\")[0].trimEnd().trimStart();\n        mVideoInfo.title = videoInfoText.split(\"状态：\")[1].split(\"主演：\")[0].trimEnd().trimStart();\n        mVideoInfo.stars = videoInfoText.split(\"主演：\")[1].split(\"类型：\")[0].trimEnd().trimStart();\n        mVideoInfo.types = videoInfoText.split(\"类型：\")[1].split(\"导演：\")[0].trimEnd().trimStart();\n        mVideoInfo.director = videoInfoText.split(\"导演：\")[1].split(\"年份：\")[0].trimEnd().trimStart();\n        mVideoInfo.showTime = videoInfoText.split(\"年份：\")[1].split(\"语言：\")[0].trimEnd().trimStart();\n        mVideoInfo.language = videoInfoText.split(\"语言：\")[1].split(\"地区：\")[0].trimEnd().trimStart();\n        mVideoInfo.area = videoInfoText.split(\"地区：\")[1].split(\"更新：\")[0].trimEnd().trimStart();\n        mVideoInfo.updateTime = videoInfoText.split(\"更新：\")[1].split(\"简介：\")[0].trimEnd().trimStart();\n        mVideoInfo.introduction = document.getElementsByClassName(\"vod_content\")[0].textContent.trimEnd().trimStart();\n        let playLineInfo = document.getElementsByClassName(\"vod-info-tab\")[0];\n\n        let playLineEpisodeInfoElements = playLineInfo.getElementsByClassName(\"play-box\");\n        for (let i = 0; i < playLineEpisodeInfoElements.length; i++) {\n            let episodeItemEpisodeElements = playLineEpisodeInfoElements[i].getElementsByClassName(\"plau-ul-list\")[0].getElementsByTagName(\"li\");\n            const mPlayLine = {\"videoEpisodeList\": []};\n            for (let i = episodeItemEpisodeElements.length - 1; i > -1; i--) {\n                const a = episodeItemEpisodeElements[i].getElementsByTagName(\"a\")[0];\n                const mVideoEpisode = {\"name\": \"\", \"url\": \"\"};\n                mVideoEpisode.name = a.attributes[\"title\"].value;\n                mVideoEpisode.url = document.location.protocol + \"//\" + window.location.host + a.attributes[\"href\"].value;\n                mPlayLine.videoEpisodeList.push(mVideoEpisode);\n            }\n            mVideoInfo.playLineList.push(mPlayLine);\n        }\n        console.log(JSON.stringify(mVideoInfo));\n        window.videoPluginEngine.sendVideoInfo(JSON.stringify(mVideoInfo));\n    } catch (e) {\n        window.videoPluginEngine.sendError(e.toString());\n    }\n}\n\nloadInfoPage();",
  "playUrlParserScript": "",
  "verName": "v1.0",
  "author": "小丑鱼",
  "introShort": "快速的优质源",
  "updateTime": "2020/02/02",
  "supports": [
    true
  ],
  "name": "看看屋",
  "tags": [
    "推荐"
  ],
  "vipCode": 0,
  "verCode": 1,
  "engineVerCode": 1
}
